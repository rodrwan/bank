version: "3"

services:
  server:
    container_name: server
    build:
      dockerfile: ./cmd/server/Dockerfile
      context: .
    restart: always
    environment:
      - ACCOUNTS_READ_URL=accounts-read:8010
      - ACCOUNTS_WRITE_URL=accounts-write:8011
      - USERS_READ_URL=users-read:8020
      - USERS_WRITE_URL=users-write:8021
      - SESSION_URL=session:8090
      - PORT=8000
      - JAEGER_SERVICE_NAME=grapqhl-server
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "8000:8000"

  denormalizer:
    container_name: denormalizer
    build:
      dockerfile: ./cmd/denormalizer/Dockerfile
      context: .
    restart: always
    environment:
      - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - rabbitmq

  accounts-read:
    container_name: accounts-read
    build:
      dockerfile: ./cmd/accounts/read/Dockerfile
      context: .
    restart: always
    environment:
      - MONGO_URI=mongodb://db:27017
      - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
      - PORT=8010
      - JAEGER_SERVICE_NAME=accounts-read-svc
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - rabbitmq
    ports:
      - "8010:8010"

  accounts-write:
    container_name: accounts-write
    build:
      dockerfile: ./cmd/accounts/write/Dockerfile
      context: .
    restart: always
    environment:
      - MONGO_URI=mongodb://db:27017
      - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/accounts_api?sslmode=disable
      - PORT=8011
      - JAEGER_SERVICE_NAME=accounts-write-svc
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "8011:8011"

  users-read:
    container_name: users-read
    build:
      dockerfile: ./cmd/users/read/Dockerfile
      context: .
    restart: always
    environment:
      - MONGO_URI=mongodb://db:27017
      - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/users_api?sslmode=disable
      - PORT=8020
      - JAEGER_SERVICE_NAME=users-read-svc
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "8020:8020"

  users-write:
    container_name: users-write
    build:
      dockerfile: ./cmd/users/write/Dockerfile
      context: .
    restart: always
    environment:
      - MONGO_URI=mongodb://db:27017
      - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/users_api?sslmode=disable
      - PORT=8021
      - JAEGER_SERVICE_NAME=users-write-svc
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "8021:8021"

  session:
    container_name: session
    build:
      dockerfile: ./cmd/session/Dockerfile
      context: .
    restart: always
    environment:
      - PORT=8090
      - JAEGER_SERVICE_NAME=users-write-svc
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - REDIS_URL=redis:6379
      - ACCESS_SECRET=flashdfaslkf813e
      - REFRESH_SECRET=dasldfkah32
    depends_on:
      - redis
    ports:
      - "8090:8090"

  # deposits:
  #   container_name: deposits
  #   build: .
  #   command:
  #     - "go run"
  #     - "cmd/deposits/main.go"
  #   environment:
  #     - MONGO_URI=mongodb://db:27017
  #     - PORT=8002
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   ports:
  #     - "8002:8002"

  # withdrawals:
  #   container_name: withdrawals
  #   build: .
  #   command:
  #     - "go run"
  #     - "cmd/withdrawals/main.go"
  #   environment:
  #     - MONGO_URI=mongodb://db:27017
  #     - PORT=8004
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   ports:
  #     - "8004:8004"

  postgres:
    container_name: postgres
    image: "postgres:11.5-alpine"
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES=users_api,accounts_api
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"

  cassandra:
    image: cassandra

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "8082:15672"

  redis:
    image: redis:5.0.6-alpine
    ports:
      - "6379:6379"
    environment:
      - TEST=111
